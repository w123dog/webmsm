<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:log4j.properties</value>
            </list>
        </property>
        <property name="ignoreUnresolvablePlaceholders" value="true"/>
    </bean>

    <!-- 资源文件配置 -->
    <bean id="propertyBean" class="org.mocos.msm.servlet.PropertyBean">
        <property name="locations">
            <list>
                <value>classpath:systemConfig.properties</value>
                <!-- <value>classpath:properties-*.properties</value>  -->
            </list>
        </property>
    </bean>

    <!--
        &lt;!&ndash; 配置DataSource数据源 &ndash;&gt;
        <bean id ="dataSource" class ="org.springframework.jdbc.datasource.DriverManagerDataSource" >
            <property name ="driverClassName" value ="com.mysql.jdbc.Driver" />
            <property name ="url" value ="jdbc:mysql://localhost:3306/demo" />
            <property name ="username" value ="root" />
            <property name ="password" value ="12357zy" />
        </bean >
    -->


    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">

<!--        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://localhost:3306/demo"/>
        <property name="username" value="root"/>
        <property name="password" value="12357zy"/>-->

        <property name="driverClassName" value="${driver}" />
        <property name="url" value="${url}" />
        <property name="username" value="${user}" />
        <property name="password" value="${password}" />

        <property name="filters" value="stat"/>

        <property name="maxActive" value="20"/>
        <property name="initialSize" value="1"/>
        <property name="maxWait" value="60000"/>
        <property name="minIdle" value="1"/>

<!--        <property name="timeBetweenEvictionRunsMillis" value="3000"/>
        <property name="minEvictableIdleTimeMillis" value="300000"/>-->

        <property name="validationQuery" value="SELECT 'x'"/>
        <property name="testWhileIdle" value="true"/>
        <property name="testOnBorrow" value="false"/>
        <property name="testOnReturn" value="false"/>
        <property name="timeBetweenEvictionRunsMillis" value="20000" />
        <property name="numTestsPerEvictionRun" value="100" />


    </bean>

    <!-- 配置SqlSessionFactoryBean -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:mybatis.xml"/>
        <!-- mapper和resultmap配置路径 -->
        <property name="mapperLocations">
            <list>
                <!-- 表示在com.hoo.resultmap包或以下所有目录中，以-resultmap.xml结尾所有文件 -->
                <value>classpath*:org/mocos/msm/mapper/*.xml</value>
            </list>
        </property>
    </bean>

    <!-- 通过扫描的模式，扫描目录在com/hoo/mapper目录下，所有的mapper都继承SqlMapper接口的接口， 这样一个bean就可以了 -->
    <!--
                如果使用mapperCannerConfigurer模式，需要设置扫描根路径也就是你的mybatis的mapper接口所在包路径；凡是 markerInterface这个接口的子接口都参与到这个扫描，也就是说所有的mapper接口继承这个SqlMapper。
     -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="org.mocos.msm.mapper"/>
        <property name="markerInterface" value="org.mocos.msm.mapper.SqlMapper"/>
    </bean>

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

</beans>